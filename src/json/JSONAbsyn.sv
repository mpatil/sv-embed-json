/* -*- sv -*- File generated by the BNF Converter (bnfc 2.9.6). */

`ifndef JSON_ABSYN_SV
`define JSON_ABSYN_SV
`include "json/JSONAbsyn.svh"

/********************   JSONValue    ********************/
function JSONValue::new(Value p1);
  value_ = p1;

endfunction

task JSONValue::accept(Visitor v);
  v.visitJSONValue(this);
endtask



/********************   ObjectVal    ********************/
function ObjectVal::new(ListMember_Item p1);
  listmember_item_ = p1;

endfunction

task ObjectVal::accept(Visitor v);
  v.visitObjectVal(this);
endtask



/********************   ArrayVal    ********************/
function ArrayVal::new(ListValue p1);
  listvalue_ = p1;

endfunction

task ArrayVal::accept(Visitor v);
  v.visitArrayVal(this);
endtask



/********************   StringVal    ********************/
function StringVal::new(String_Literal p1);
  string_literal_ = p1;

endfunction

task StringVal::accept(Visitor v);
  v.visitStringVal(this);
endtask



/********************   ScientificNumberVal    ********************/
function ScientificNumberVal::new(ScientificNum p1);
  scientificnum_ = p1;

endfunction

task ScientificNumberVal::accept(Visitor v);
  v.visitScientificNumberVal(this);
endtask



/********************   DecimalNumberVal    ********************/
function DecimalNumberVal::new(DecimalNum p1);
  decimalnum_ = p1;

endfunction

task DecimalNumberVal::accept(Visitor v);
  v.visitDecimalNumberVal(this);
endtask



/********************   IntegerNumberVal    ********************/
function IntegerNumberVal::new(IntegerNum p1);
  integernum_ = p1;

endfunction

task IntegerNumberVal::accept(Visitor v);
  v.visitIntegerNumberVal(this);
endtask



/********************   TrueVal    ********************/
function TrueVal::new();

endfunction

task TrueVal::accept(Visitor v);
  v.visitTrueVal(this);
endtask



/********************   FalseVal    ********************/
function FalseVal::new();

endfunction

task FalseVal::accept(Visitor v);
  v.visitFalseVal(this);
endtask



/********************   NullVal    ********************/
function NullVal::new();

endfunction

task NullVal::accept(Visitor v);
  v.visitNullVal(this);
endtask



/********************   Member    ********************/
function Member::new(String_Literal p1, Value p2);
  string_literal_ = p1;
  value_ = p2;

endfunction

task Member::accept(Visitor v);
  v.visitMember(this);
endtask



/********************   StringLit    ********************/
function StringLit::new(AnyChars p1);
  anychars_ = p1;

endfunction

task StringLit::accept(Visitor v);
  v.visitStringLit(this);
endtask




/********************   ListMember_Item    ********************/

task ListMember_Item::accept(Visitor v);
  v.visitListMember_Item(this);
endtask



/********************   ListValue    ********************/

task ListValue::accept(Visitor v);
  v.visitListValue(this);
endtask





`endif
